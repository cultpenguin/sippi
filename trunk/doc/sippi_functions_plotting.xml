<sect2 xml:id="sippi_colormap"><title>sippi_colormap</title>
<para><programlisting><![CDATA[  sippi_colormap Default colormap for sippi
 
  Call :
    sippi_colormap; % the same as sippi_colormap(3);
 
  or :
    sippi_colormap(1) - Red Green Black
    sippi_colormap(2) - Red Green Blue Black
    sippi_colormap(3) - Jet
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_current_model"><title>sippi_plot_current_model</title>
<para><programlisting><![CDATA[  sippi_plot_current_model Plots the current model during Metropolis sampling
 
  Call :
    sippi_plot_current_model(mcmc,data,d,m_current,prior);
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_data"><title>sippi_plot_data</title>
<para><programlisting><![CDATA[  sippi_plot_data plot data in SIPPI
 
  Call.
     sippi_plot_data(d,data);
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_defaults"><title>sippi_plot_defaults</title>
<para><programlisting><![CDATA[  sippi_plot_defaults: Sets default options for ploting (such as fontsize)
 
  Call :
    options==sippi_plot_defaults(options);
 
    % ALWAYS USE DEFULT SETTING (overrules options.axis)
    overrule=1; % {default overrule=0)
    options==sippi_plot_defaults(options,overrule);
 
  See also: sippi_plot_posterior, sippi_plot_posterior_2d_marg
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_loglikelihood"><title>sippi_plot_loglikelihood</title>
<para><programlisting><![CDATA[  sippi_plot_loglikelihood Plot loglikelihood time series
 
  Call : 
     acc=sippi_plot_loglikelihood(logL,i_acc,N,itext)
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_model"><title>sippi_plot_model</title>
<para><programlisting><![CDATA[]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_movie"><title>sippi_plot_movie</title>
<para><programlisting><![CDATA[  sippi_plot_movie plot movie of prior and posterior realizations
 
  Call :
    sippi_plot_movie(fname);
    sippi_plot_movie(fname,im_array,n_frames,skip_burnin);
       fname : name of folder with results (e.g. options.txt)
       im_array : array of indexes of model parameters to make into movies
       n_frames [200] : number of frames in movie
       skip_burnin [200] : start movie after burn_in;
 
  Ex:
  sippi_plot_movie('20130812_Metropolis');
  sippi_plot_movie(options.txt);
 
  %% 1000 realization including burn-in, for prior number 1
  sippi_plot_movie('20130812_Metropolis',1,1000,0);
 
  Using options.plot.skip_seq_gibbs=1, (set in sippi_plot_defaults)
  removes realizations obtained using sequential Gibbs sampling 
  (equivalent to setting skip_burnin=1)
 
  See also: sippi_plot_defaults
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_posterior"><title>sippi_plot_posterior</title>
<para><programlisting><![CDATA[  sippi_plot_posterior Plot statistics from posterior sample
 
  Call :
     sippi_plot_posterior(fname,im_arr,prior,options,n_reals);
 
  See also sippi_plot_prior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_posterior_2d_marg"><title>sippi_plot_posterior_2d_marg</title>
<para><programlisting><![CDATA[  sippi_plot_posterior_2d_marg: plots 2D posterior marginal distributions
 
  Call:
     [options,reals_all]=sippi_plot_posterior_2d_marg(options,prior,data,fname);
 
  See also: sippi_plot_posterior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_posterior_data"><title>sippi_plot_posterior_data</title>
<para><programlisting><![CDATA[  sippi_plot_posterior_data: plots posterior data and noise relaizations
 
  Call 
     [options]=sippi_plot_posterior_data(options,prior,data,forward);
        
  See also: sippi_plot_posterior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_posterior_loglikelihood"><title>sippi_plot_posterior_loglikelihood</title>
<para><programlisting><![CDATA[  sippi_plot_posterior_loglikelihod : plots log(L) and autorreation of log(L)
 
  Call:
      sippi_plot_posterior_loglikelihood; % when located in an output folder
                                          % generated by SIPPI
 
      sippi_plot_posterior_loglikelihood(foldername); % Where 'foldername'
                                          % is a folder generated by SIPPI
 
 
      sippi_plot_posterior_loglikelihood(options); % where options is the
                         % output of sippi_rejection or sippi_metropolis
 
 
      options=sippi_plot_posterior_loglikelihood(options,prior,data,mcmc,fname);
 
 
  See also: sippi_plot_posterior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_posterior_sample"><title>sippi_plot_posterior_sample</title>
<para><programlisting><![CDATA[  sippi_plot_posterior_sample: plots posterior sample statistics
 
  Call
     [options]=sippi_plot_posterior_sample(options,prior,data,forward);
 
  See also: sippi_plot_posterior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_prior"><title>sippi_plot_prior</title>
<para><programlisting><![CDATA[  sippi_plot_prior Plot a 'model', i.e. a realization of the prior model
 
 
  Call :
    sippi_plot_prior(prior,m,im_array);
 
    prior : Matlab structure for SIPPI prior model
    m : Matlab structure for SIPPI realization
    im_array : integer array of type of models to plot (typically 1)
 
 
  Example
    m=sippi_prior(prior);
    sippi_plot_prior(prior,m);
 
    m=sippi_prior(prior);
    sippi_plot_prior(prior,m,2);
 
  See also sippi_plot_prior, sippi_prior
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_prior_sample"><title>sippi_plot_prior_sample</title>
<para><programlisting><![CDATA[  sippi_plot_prior Plot a sample of the prior in SIPPI
 
  Call :
     sippi_plot_prior_sample(prior,im_array,n_reals,cax,options);
 
   See also sippi_plot_posterior, sippi_plot_prior, sippi_prior
 
]]></programlisting></para>
</sect2>

<sect2 xml:id="sippi_plot_set_axis"><title>sippi_plot_set_axis</title>
<para><programlisting><![CDATA[  sippi_plot_set_axis
  see also sippi_plot_defaults
]]></programlisting></para>
</sect2>

<sect2 xml:id="wiggle"><title>wiggle</title>
<para><programlisting><![CDATA[  wiggle : plot wiggle/VA/image plot
 
  Call
     wiggle(Data); % wiggle plot
     wiggle(Data,scale); % scaled wiggle plot
     wiggle(x,t,Data); % wiggle plt
     wiggle(x,t,Data,'VA') % variable Area (pos->black;neg->transp)
     wiggle(x,t,Data,'VA2') % variable Area (pos->black;neg->red)
     wiggle(x,t,Data,'wiggle',scale); % Scaled wiggle
     wiggle(x,t,Data,'wiggle',scale,showmax); % Scaled wiggle and max
                                                showmax traces.
     wiggle(x,t,Data,'wiggle',scale,showmax,plimage); % wiggle + image
     wiggle(x,t,Data,'wiggle',scale,showmax,plimage,caxis); % wiggle +
                                                              scaled image
 
  Data : [nt,ntraces]
  x : [1:ntraces] X axis (ex [SegyTraceheaders.offset])
  t : [1:nt] Y axis
  style : ['VA'] : Variable Area
          ['wiggle'] : Wiggle plot
  scale : scaling factor, can be left empty as []
  showmax [scalar] : max number of traces to show on display [def=100]
  plimage [0/1] : Show image beneath wiggles [def=0];
  caxis [min max]/[scalar] : amplitude range for colorscale
 
 
  MAKE IT WORK FOR ANY X-AXIS !!!
 
 
]]></programlisting></para>
</sect2>

